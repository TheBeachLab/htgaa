{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "2*s0.r",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "2*r0.width",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "r0.height+r0.width",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0iiiiiiim-Xf0-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf2-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf6-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf10-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf14-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12',float('0.000000'),float('0.000000'),float('-inf'),float('15.000000'),float('12.000000'),float('inf'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -140,
                53
            ],
            "name": "a0",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate2d(shape, i, j, dx, dy))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "r0.width/2",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r0.height/2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__6.__1]",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__6.__3]",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f0X-Xf1a-f0Y-Yf12',float('0.000000'),float('0.000000'),float('-inf'),float('1.000000'),float('12.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -459,
                -118
            ],
            "name": "r0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "r2.width/2-2*r0.width",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r2.height/2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "3*r0.width",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__0.__2]",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f-2X-Xf1a-f0Y-Yf1',float('-2.000000'),float('0.000000'),float('-inf'),float('1.000000'),float('1.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -145.64451644406256,
                -168.08438684474996
            ],
            "name": "r2",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "s0.r+1",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "4*r0.width",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "1",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0iiiim-Xf0-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf4-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf8-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf12-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf16-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1',float('-2.000000'),float('0.000000'),float('-inf'),float('17.000000'),float('1.000000'),float('inf'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                180.72404085023334,
                45.115121919811884
            ],
            "name": "a1",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate2d(shape, i, j, dx, dy))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "r2.width/2",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r2.height/2+(r0.height-r0.width)",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__3.__2]",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__3.__3]",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f0X-Xf3a-f11Y-Yf12',float('0.000000'),float('11.000000'),float('-inf'),float('3.000000'),float('12.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                174.7854723183417,
                -222.23099740589765
            ],
            "name": "r3",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "4",
                    "name": "r",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "1",
                    "name": "width",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "12",
                    "name": "length",
                    "type": "float",
                    "uid": 3
                }
            ],
            "inspector": [
                -484.05496990392635,
                123.49294097555295
            ],
            "name": "s0",
            "script": [
                "import fab",
                "",
                "title('Parameters')",
                "input('r', float)",
                "input('width', float)",
                "input('length', float)",
                "",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__5.__4]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "s0.r",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "4*r0.width",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "1",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12',float('0.000000'),float('11.000000'),float('-inf'),float('15.000000'),float('12.000000'),float('inf'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                480.52553899460327,
                -54.753406298868327
            ],
            "name": "a2",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate2d(shape, i, j, dx, dy))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "r2.width/2-2*r0.width",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r2.height/2+(r0.height-r0.width)",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__3.__2]",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__3.__3]",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f-2X-Xf1a-f11Y-Yf12',float('-2.000000'),float('11.000000'),float('-inf'),float('1.000000'),float('12.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                187.27346788169365,
                -481.74337617289643
            ],
            "name": "r1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "r4.width/2+(s0.r*4*r0.width)",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r4.height/2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "4*s0.width",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__6.__3]",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f16X-Xf20a-f0Y-Yf12',float('16.000000'),float('0.000000'),float('-inf'),float('20.000000'),float('12.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -175.71420709469012,
                306.37752784712109
            ],
            "name": "r4",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "-r5.width/2-r0.width",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r0.height-r5.height/2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "4*s0.width",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "r0.height/2",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f-5X-Xf-1a-f6Y-Yf12',float('-5.000000'),float('6.000000'),float('-inf'),float('-1.000000'),float('12.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -181.07463146976909,
                528.30608847742758
            ],
            "name": "r5",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "-r6.width/2-r0.width",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "r6.height/2-r0.width/2",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "4*s0.width",
                    "name": "width",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "r0.height/2-r0.width/2",
                    "name": "height",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-f-5X-Xf-1a-f-0.5Y-Yf5',float('-5.000000'),float('-0.500000'),float('-inf'),float('-1.000000'),float('5.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                -178.50425380150403,
                741.3611363898907
            ],
            "name": "r6",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 6/11/15",
                "",
                "import fab",
                "",
                "title('Rectangle (center)')",
                "",
                "input('x0', float)",
                "input('y0', float)",
                "input('width', float)",
                "input('height', float)",
                "",
                "xmin, xmax = x0 - width/2, x0 + width/2",
                "ymin, ymax = y0 - height/2, y0 + height/2",
                "",
                "output('shape', fab.shapes.rectangle(xmin, xmax, ymin, ymax))",
                "",
                "def drag_hw(this, x, y, z):",
                "   this.width = abs(2 * (x - this.x0))",
                "   this.height = abs(2 * (y - this.y0))",
                "",
                "# UI",
                "sb.ui.wireframe(",
                "        [(xmin, ymin, 0), (xmax, ymin, 0), (xmax, ymax, 0), (xmin, ymax, 0)],",
                "        close=True)",
                "sb.ui.point(x0, y0)",
                "sb.ui.point(xmax, ymax, drag=drag_hw, relative=False)",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__4.__7,__1.__7,__7.__4]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__2.__7,__8.__4,__9.__4,__10.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('iiim-Xf0-Yf0-Zf0iiiim-Xf0-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf4-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf8-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf12-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf16-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12aa-f-2X-Xf1a-f11Y-Yf12iiim-Xf0-Yf0-Zf0iiiiiiim-Xf0-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf2-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf6-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf10-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf14-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12aa-f16X-Xf20a-f0Y-Yf12aa-f-5X-Xf-1a-f6Y-Yf12aa-f-5X-Xf-1a-f-0.5Y-Yf5',float('-5.000000'),float('-0.500000'),float('-inf'),float('20.000000'),float('12.000000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                486.18670798754636,
                371.24372105997031
            ],
            "name": "u0",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0",
                    "name": "dx",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "r0.width/2",
                    "name": "dy",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0",
                    "name": "dz",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0011[__11.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0.5-Zf0iiim-Xf0-Yf0-Zf0iiiim-Xf0-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf4-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf8-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf12-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf16-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12aa-f-2X-Xf1a-f11Y-Yf12iiim-Xf0-Yf0-Zf0iiiiiiim-Xf0-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf2-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf6-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf10-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf14-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12aa-f16X-Xf20a-f0Y-Yf12aa-f-5X-Xf-1a-f6Y-Yf12aa-f-5X-Xf-1a-f-0.5Y-Yf5',float('-5.000000'),float('0.000000'),float('-inf'),float('20.000000'),float('12.500000'),float('inf'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                782.382636695359,
                340.00609334552576
            ],
            "name": "t0",
            "script": [
                "import fab",
                "",
                "title('Translate')",
                "",
                "input('_x', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('dx', float)",
                "input('dy', float)",
                "input('dz', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', fab.shapes.translate(shape, dx, dy, dz))",
                "",
                "# UI",
                "sb.ui.wireframe([(_x, _y, _z),",
                "                  (_x + dx, _y + dy, _z + dz)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y - 0.3, _z),",
                "                  (_x, _y + 0.3, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x - 0.3, _y, _z),",
                "                  (_x + 0.3, _y, _z)], color=sb.color.teal)",
                "sb.ui.wireframe([(_x, _y, _z - 0.3),",
                "                  (_x, _y, _z + 0.3)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, _z, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y + dy, _z + dz, color=sb.color.teal, drag=(dx, dy, dz))",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__12.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0.5-Zf0iiim-Xf0-Yf0-Zf0iiiim-Xf0-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf4-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf8-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf12-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf16-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12aa-f-2X-Xf1a-f11Y-Yf12iiim-Xf0-Yf0-Zf0iiiiiiim-Xf0-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf2-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf6-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf10-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf14-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12aa-f16X-Xf20a-f0Y-Yf12aa-f-5X-Xf-1a-f6Y-Yf12aa-f-5X-Xf-1a-f-0.5Y-Yf5',float('-5.000000'),float('0.000000'),float('-inf'),float('20.000000'),float('12.500000'),float('inf'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1114.9848398985216,
                382.82433279554368
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__12.__7]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0.5-Zf0iiim-Xf0-Yf0-Zf0iiiim-Xf0-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf4-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf8-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf12-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf16-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12aa-f-2X-Xf1a-f11Y-Yf12iiim-Xf0-Yf0-Zf0iiiiiiim-Xf0-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf2-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf6-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf10-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf14-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12aa-f16X-Xf20a-f0Y-Yf12aa-f-5X-Xf-1a-f6Y-Yf12aa-f-5X-Xf-1a-f-0.5Y-Yf5',float('-5.000000'),float('0.000000'),float('-inf'),float('20.000000'),float('12.500000'),float('inf'))",
                    "name": "copy",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1115.2614992750582,
                516.13040977016294
            ],
            "name": "c1",
            "script": [
                "# Neil Gershenfeld 2/14/15",
                "# Matt Keeter 6/12/15",
                "",
                "import fab",
                "",
                "title('Copy')",
                "",
                "input('shape', fab.types.Shape)",
                "output('copy', shape)",
                "",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u0011[__14.__1]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('m_-*f2f0Y_m-Xf0-Yf0.5-Zf0iiim-Xf0-Yf0-Zf0iiiim-Xf0-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf4-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf8-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf12-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf16-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12aa-f-2X-Xf1a-f11Y-Yf12iiim-Xf0-Yf0-Zf0iiiiiiim-Xf0-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf2-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf6-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf10-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf14-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12aa-f16X-Xf20a-f0Y-Yf12aa-f-5X-Xf-1a-f6Y-Yf12aa-f-5X-Xf-1a-f-0.5Y-Yf5',float('-5.000000'),float('-12.500000'),float('-inf'),float('20.000000'),float('0.000000'),float('inf'))",
                    "name": "reflected",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                1482.3133754534817,
                643.58964641609657
            ],
            "name": "r7",
            "script": [
                "import fab",
                "",
                "title('Reflect (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('reflected', fab.shapes.reflect_y(shape, y0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x - 1, y0, _z + 1),",
                "    (_x + 1, y0, _z + 1),",
                "    (_x + 1, y0, _z - 1),",
                "    (_x - 1, y0, _z - 1)], color=sb.color.teal, close=True)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__13.__1]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__15.__4]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf0-Yf0.5-Zf0iiim-Xf0-Yf0-Zf0iiiim-Xf0-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf4-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf8-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf12-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf16-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12aa-f-2X-Xf1a-f11Y-Yf12iiim-Xf0-Yf0-Zf0iiiiiiim-Xf0-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf2-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf6-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf10-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf14-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12aa-f16X-Xf20a-f0Y-Yf12aa-f-5X-Xf-1a-f6Y-Yf12aa-f-5X-Xf-1a-f-0.5Y-Yf5m_-*f2f0Y_m-Xf0-Yf0.5-Zf0iiim-Xf0-Yf0-Zf0iiiim-Xf0-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf4-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf8-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf12-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf16-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12aa-f-2X-Xf1a-f11Y-Yf12iiim-Xf0-Yf0-Zf0iiiiiiim-Xf0-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf2-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf6-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf10-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf14-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12aa-f16X-Xf20a-f0Y-Yf12aa-f-5X-Xf-1a-f6Y-Yf12aa-f-5X-Xf-1a-f-0.5Y-Yf5',float('-5.000000'),float('-12.500000'),float('-inf'),float('20.000000'),float('12.500000'),float('inf'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1826.7022813208227,
                478.69513817834763
            ],
            "name": "u1",
            "script": [
                "import fab.types",
                "",
                "title('Union')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a | b)",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__16.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('im-Xf0-Yf0.5-Zf0iiim-Xf0-Yf0-Zf0iiiim-Xf0-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf4-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf8-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf12-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf16-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12aa-f-2X-Xf1a-f11Y-Yf12iiim-Xf0-Yf0-Zf0iiiiiiim-Xf0-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf2-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf6-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf10-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf14-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12aa-f16X-Xf20a-f0Y-Yf12aa-f-5X-Xf-1a-f6Y-Yf12aa-f-5X-Xf-1a-f-0.5Y-Yf5m_-*f2f0Y_m-Xf0-Yf0.5-Zf0iiim-Xf0-Yf0-Zf0iiiim-Xf0-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf4-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf8-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf12-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf16-Yf0-Zf0aa-f-2X-Xf1a-f0Y-Yf1m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf3a-f11Y-Yf12aa-f-2X-Xf1a-f11Y-Yf12iiim-Xf0-Yf0-Zf0iiiiiiim-Xf0-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf2-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf4-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf6-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf8-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf10-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf12-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12m-Xf14-Yf0-Zf0aa-f0X-Xf1a-f0Y-Yf12aa-f16X-Xf20a-f0Y-Yf12aa-f-5X-Xf-1a-f6Y-Yf12aa-f-5X-Xf-1a-f-0.5Y-Yf5',float('-5.000000'),float('-12.500000'),float('-inf'),float('20.000000'),float('12.500000'),float('inf'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                2146.4761557717584,
                464.7741758778518
            ],
            "name": "h0",
            "script": [
                "import fab",
                "",
                "title('Heightmap (.png)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.heightmap(shape)",
                ""
            ],
            "uid": 17
        }
    ],
    "protocol": 6,
    "type": "sb"
}
